name: Production Deploy - 現場安全性確保

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  # 本番デプロイ前の最終安全性チェック
  production-safety-check:
    runs-on: ubuntu-latest
    name: 本番安全性最終チェック
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Critical functionality test (最重要機能テスト)
      run: |
        echo "🚨 現場で絶対に壊れてほしくない部分のテストを実行中..."
        npm run test:critical
        
    - name: Full test suite (全テスト実行)
      run: npm run test:coverage
      
    - name: Type safety check (型安全性チェック)
      run: npm run type-check
      
    - name: Code quality check (コード品質チェック)
      run: npm run lint
      
    - name: Build verification (ビルド検証)
      run: npm run build
      
    - name: Production ready notification
      run: |
        echo "✅ 本番デプロイ準備完了！"
        echo "現場で壊れて困る部分は全て守られています。"
        echo "デプロイを実行します..."

  # Vercel デプロイ
  deploy-vercel:
    runs-on: ubuntu-latest
    needs: production-safety-check
    if: success()
    name: Vercel本番デプロイ
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Deploy to Vercel
      uses: amondnet/vercel-action@v25
      with:
        vercel-token: ${{ secrets.VERCEL_TOKEN }}
        vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
        vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
        vercel-args: '--prod'
        
    - name: Deploy success notification
      run: |
        echo "🎉 本番デプロイ成功！"
        echo "現場で安心してご利用いただけます。"

  # Netlify デプロイ (バックアップ)
  deploy-netlify:
    runs-on: ubuntu-latest
    needs: production-safety-check
    if: success()
    name: Netlify本番デプロイ
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build for Netlify
      run: npm run build
      
    - name: Deploy to Netlify
      uses: nwtgck/actions-netlify@v2.0
      with:
        publish-dir: './dist'
        production-branch: main
        github-token: ${{ secrets.GITHUB_TOKEN }}
        deploy-message: "Deploy from GitHub Actions"
      env:
        NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
        NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}

  # デプロイ失敗時の緊急アラート
  emergency-alert:
    runs-on: ubuntu-latest
    needs: [deploy-vercel, deploy-netlify]
    if: failure()
    name: 緊急アラート通知
    
    steps:
    - name: Emergency notification
      run: |
        echo "🚨🚨🚨 本番デプロイが失敗しました！🚨🚨🚨"
        echo "現場での利用に影響が出る可能性があります。"
        echo "即座に確認・修正が必要です。"
        # Slack通知例
        # curl -X POST -H 'Content-type: application/json' \
        #   --data '{"text":"🚨 本番デプロイ失敗！現場確認が必要です。"}' \
        #   ${{ secrets.SLACK_WEBHOOK_URL }} 
        