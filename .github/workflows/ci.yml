name: CI/CD Pipeline - 現場安全性確保

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  # 現場で壊れて困る部分のテスト・型・ビルドチェック
  safety-check:
    runs-on: ubuntu-latest
    name: 現場安全性チェック
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Type check (型安全性確保)
      run: npm run type-check
      
    - name: Lint check (コード品質確保)
      run: npm run lint
      
    - name: Run tests (現場で壊れて困る部分のテスト)
      run: npm run test:coverage
      
    - name: Build check (ビルド成功確認)
      run: npm run build
      
    - name: Upload coverage reports
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage/lcov.info
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

  # 現場運用のための通知・アラート
  notify-on-failure:
    runs-on: ubuntu-latest
    needs: safety-check
    if: failure()
    name: 現場アラート通知
    
    steps:
    - name: Notify failure (Slack/Teams等)
      run: |
        echo "🚨 現場で壊れて困る部分のテストが失敗しました！"
        echo "即座に確認・修正が必要です。"
        # ここにSlack/Teams通知の設定を追加可能
        # 例: curl -X POST -H 'Content-type: application/json' --data '{"text":"🚨 ケア記録アプリのテストが失敗しました！"}' $SLACK_WEBHOOK_URL

  # デプロイ前の最終チェック
  pre-deploy-check:
    runs-on: ubuntu-latest
    needs: safety-check
    if: success()
    name: デプロイ前最終チェック
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Critical tests (最重要テストのみ実行)
      run: |
        # 現場で絶対に壊れてほしくない部分のテストのみ実行
        npx vitest run tests/UsersPage.test.tsx
        npx vitest run tests/DailyLogInputPage.test.tsx
        npx vitest run tests/StaffPage.test.tsx
        npx vitest run tests/ReportsPage.test.tsx
      
    - name: Deploy ready notification
      run: |
        echo "✅ デプロイ準備完了！現場で壊れて困る部分は全て守られています。" 
# kick: no-op line for PR diff
