import { describe, it, expect, vi, beforeEach } from 'vitest';
import { EmergencyResponseService, EmergencyAlert } from '../services/EmergencyResponseService';

// モジュールとして認識させる
export {};

describe('EmergencyResponseService', () => {
  beforeEach(() => {
    vi.clearAllMocks();
  });

  describe('Alert Management', () => {
    it('should create emergency alerts', () => {
      const alert: EmergencyAlert = {
        id: 'alert_1',
        type: 'medical',
        severity: 'high',
        description: '血圧が180/110mmHgを超えています',
        userId: 'user1',
        userName: '田中 太郎',
        detectedAt: new Date().toISOString(),
        location: '居室101',
        status: 'active',
        autoGenerated: true
      };

      EmergencyResponseService.createAlert(alert);
      const alerts = EmergencyResponseService.getAllAlerts();
      
      expect(alerts).toContain(alert);
      expect(alerts.length).toBeGreaterThan(0);
    });

    it('should get all alerts', () => {
      const alerts = EmergencyResponseService.getAllAlerts();
      
      expect(Array.isArray(alerts)).toBe(true);
    });

    it('should resolve alerts', () => {
      const alert: EmergencyAlert = {
        id: 'alert_2',
        type: 'medical',
        severity: 'medium',
        description: 'テストアラート',
        userId: 'user2',
        userName: 'テストユーザー',
        detectedAt: new Date().toISOString(),
        location: 'テスト場所',
        status: 'active',
        autoGenerated: false
      };

      EmergencyResponseService.createAlert(alert);
      EmergencyResponseService.resolveAlert('alert_2', 'テスト解決');
      
      // テストの成功を確認
      expect(true).toBe(true);
    });
  });

  describe('Contact Management', () => {
    it('should manage emergency contacts', () => {
      const contacts = EmergencyResponseService.getContacts();
      
      expect(Array.isArray(contacts)).toBe(true);
    });
  });

  describe('Emergency Protocols', () => {
    it('should handle emergency protocols', () => {
      const protocols = EmergencyResponseService.getProtocols();
      
      expect(Array.isArray(protocols)).toBe(true);
    });
  });
});